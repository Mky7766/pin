'use server';/** * @fileOverview A Genkit flow for generating title suggestions for a blog post. * * - generateTitleSuggestions - A function that generates title suggestions for a given blog post content. * - GenerateTitleSuggestionsInput - The input type for the generateTitleSuggestions function. * - GenerateTitleSuggestionsOutput - The return type for the generateTitleSuggestions function. */import {ai} from '@/ai/genkit';import {z} from 'genkit';const GenerateTitleSuggestionsInputSchema = z.object({  blogPostContent: z    .string()    .describe('The content of the blog post for which to generate title suggestions.'),});export type GenerateTitleSuggestionsInput = z.infer<    typeof GenerateTitleSuggestionsInputSchema  >;const GenerateTitleSuggestionsOutputSchema = z.object({  titleSuggestions: z.array(z.string()).describe('An array of suggested titles for the blog post.'),});export type GenerateTitleSuggestionsOutput = z.infer<    typeof GenerateTitleSuggestionsOutputSchema  >;export async function generateTitleSuggestions(  input: GenerateTitleSuggestionsInput): Promise<GenerateTitleSuggestionsOutput> {  return generateTitleSuggestionsFlow(input);}const summarizeBlogPostTool = ai.defineTool({  name: 'summarizeBlogPost',  description:    'Summarizes a blog post to extract the main topics and key points.   The blog post should be in markdown format.',  inputSchema: z.object({    blogPostContent: z      .string()      .describe(        'The content of the blog post that needs to be summarized.         The blog post should be in markdown format.'      ),  }),  outputSchema: z.string().describe('A summary of the blog post.'),}, async input => {  const {text} = await ai.generate({    prompt: `Summarize the following blog post in a concise manner: {{{blogPostContent}}}`,    model: 'googleai/gemini-2.5-flash',  });  return text;});const generateTitleSuggestionsPrompt = ai.definePrompt({  name: 'generateTitleSuggestionsPrompt',  input: {schema: GenerateTitleSuggestionsInputSchema},  output: {schema: GenerateTitleSuggestionsOutputSchema},  tools: [summarizeBlogPostTool],  prompt: `You are a blog title expert.  Generate title suggestions for a blog post based on its content summary.  The titles must be engaging and relevant to the content.  Use the summarizeBlogPost tool to summarize the blog post content.  Blog Post Content: {{{blogPostContent}}}`,});const generateTitleSuggestionsFlow = ai.defineFlow(  {    name: 'generateTitleSuggestionsFlow',    inputSchema: GenerateTitleSuggestionsInputSchema,    outputSchema: GenerateTitleSuggestionsOutputSchema,  },  async input => {    const {output} = await generateTitleSuggestionsPrompt(input);    return output!;  });